// <auto-generated />
using System;
using FurnitureAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurnitureAPI.Migrations
{
    [DbContext(typeof(FurnitureDbContext))]
    [Migration("20220204232758_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FurnitureAPI.Models.AuthToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AuthTokens", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.CategoryFurniture", b =>
                {
                    b.Property<int>("IdCategoryFurniture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoryFurniture"), 1L, 1);

                    b.Property<string>("CategoryFurnitureDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryFurnitureName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdCategoryFurniture");

                    b.ToTable("CategoryFurnitures", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.CategoryMaterial", b =>
                {
                    b.Property<int>("IdCategoryMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoryMaterial"), 1L, 1);

                    b.Property<string>("CategoryMaterialDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryMaterialName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdCategoryMaterial");

                    b.ToTable("CategoryMaterials", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"), 1L, 1);

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ClientInterested")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ClientNumberHome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPostPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientPostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientStreet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSurname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("ClientTown")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Clients", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"), 1L, 1);

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("EmployeeIsDelivered")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeNumberHome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeSeniority")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeSurname")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdEmployee");

                    b.ToTable("Employees", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Furniture", b =>
                {
                    b.Property<int>("IdFurniture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFurniture"), 1L, 1);

                    b.Property<int>("CategoryFurnitureIdCategoryFurniture")
                        .HasColumnType("int");

                    b.Property<double>("FurnitureDepth")
                        .HasColumnType("float");

                    b.Property<string>("FurnitureDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FurnitureHeight")
                        .HasColumnType("float");

                    b.Property<string>("FurnitureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("FurniturePrice")
                        .HasColumnType("float");

                    b.Property<string>("FurnitureUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FurnitureWidth")
                        .HasColumnType("float");

                    b.Property<int>("IdCategoryFurniture")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("OrderIdOrder")
                        .HasColumnType("int");

                    b.HasKey("IdFurniture");

                    b.HasIndex("CategoryFurnitureIdCategoryFurniture");

                    b.HasIndex("OrderIdOrder");

                    b.ToTable("Furnitures", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.FurnitureMaterial", b =>
                {
                    b.Property<int>("IdFurnitureMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFurnitureMaterial"), 1L, 1);

                    b.Property<int>("FurnitureIdFurniture")
                        .HasColumnType("int");

                    b.Property<int>("FurnitureMaterialAmount")
                        .HasColumnType("int");

                    b.Property<string>("FurnitureMaterialDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FurnitureMaterialPrice")
                        .HasColumnType("float");

                    b.Property<int>("IdFurniture")
                        .HasColumnType("int");

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<int>("MaterialIdMaterial")
                        .HasColumnType("int");

                    b.HasKey("IdFurnitureMaterial");

                    b.HasIndex("FurnitureIdFurniture");

                    b.HasIndex("MaterialIdMaterial");

                    b.ToTable("FurnitureMaterials", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Material", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaterial"), 1L, 1);

                    b.Property<int>("CategoryMaterialIdCategoryMaterial")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoryMaterial")
                        .HasColumnType("int");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("MaterialPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("MaterialStockStatus")
                        .HasColumnType("int");

                    b.Property<string>("MaterialUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMaterial");

                    b.HasIndex("CategoryMaterialIdCategoryMaterial");

                    b.ToTable("Materials", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"), 1L, 1);

                    b.Property<int>("ClientIdClient")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeIdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusOrder")
                        .HasColumnType("int");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OrderDateRealization")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderDateSubmission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 2, 4, 23, 27, 57, 963, DateTimeKind.Utc).AddTicks(1305));

                    b.Property<DateTime>("OrderDeadlineRealization")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OrderPayment")
                        .HasColumnType("float");

                    b.Property<double>("OrderPrePayment")
                        .HasColumnType("float");

                    b.Property<int>("StatusOrderIdStatusOrder")
                        .HasColumnType("int");

                    b.HasKey("IdOrder");

                    b.HasIndex("ClientIdClient");

                    b.HasIndex("EmployeeIdEmployee");

                    b.HasIndex("StatusOrderIdStatusOrder");

                    b.ToTable("Orders", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("IdRole");

                    b.ToTable("Roles", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.StatusOrder", b =>
                {
                    b.Property<int>("IdStatusOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusOrder"), 1L, 1);

                    b.Property<string>("StatusOrderDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOrderName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("IdStatusOrder");

                    b.ToTable("StatusOrders", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RoleIdRole")
                        .HasColumnType("int");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.HasIndex("RoleIdRole");

                    b.ToTable("Users", "Furniture");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Furniture", b =>
                {
                    b.HasOne("FurnitureAPI.Models.CategoryFurniture", "CategoryFurniture")
                        .WithMany()
                        .HasForeignKey("CategoryFurnitureIdCategoryFurniture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureAPI.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderIdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryFurniture");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("FurnitureAPI.Models.FurnitureMaterial", b =>
                {
                    b.HasOne("FurnitureAPI.Models.Furniture", "Furniture")
                        .WithMany()
                        .HasForeignKey("FurnitureIdFurniture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureAPI.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialIdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Furniture");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Material", b =>
                {
                    b.HasOne("FurnitureAPI.Models.CategoryMaterial", "CategoryMaterial")
                        .WithMany()
                        .HasForeignKey("CategoryMaterialIdCategoryMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryMaterial");
                });

            modelBuilder.Entity("FurnitureAPI.Models.Order", b =>
                {
                    b.HasOne("FurnitureAPI.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientIdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureAPI.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureAPI.Models.StatusOrder", "StatusOrder")
                        .WithMany()
                        .HasForeignKey("StatusOrderIdStatusOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");

                    b.Navigation("StatusOrder");
                });

            modelBuilder.Entity("FurnitureAPI.Models.User", b =>
                {
                    b.HasOne("FurnitureAPI.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleIdRole")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
